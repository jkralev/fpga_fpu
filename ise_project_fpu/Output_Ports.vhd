-- -------------------------------------------------------------
-- 
-- File Name: D:\Dan\FPGA_FPU\ise_project_fpu\Output_Ports.vhd
-- Created: 2012-12-12 09:56:36
-- 
-- Generated by MATLAB 7.11 and Simulink HDL Coder 2.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Output_Ports
-- Source Path: ivedsp/Output Ports
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Output_Ports IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        data_out                          :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        Port_rsvd                         :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        OUT_rsvd                          :   IN    std_logic;
        Port1                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        Port2                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        Port3                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        Port4                             :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
        );
END Output_Ports;


ARCHITECTURE rtl OF Output_Ports IS

  -- Signals
  SIGNAL Port_unsigned                    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL Compare_To_Constant_out1_1       : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL data_out_unsigned                : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Integer_Delay2_out1              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Switch_out1                      : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Compare_To_Constant1_out1        : std_logic;
  SIGNAL Compare_To_Constant1_out1_1      : std_logic;
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL Integer_Delay1_out1              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Switch1_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Compare_To_Constant2_out1        : std_logic;
  SIGNAL Compare_To_Constant2_out1_1      : std_logic;
  SIGNAL switch_compare_1_2               : std_logic;
  SIGNAL Integer_Delay3_out1              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Switch2_out1                     : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Compare_To_Constant3_out1        : std_logic;
  SIGNAL Compare_To_Constant3_out1_1      : std_logic;
  SIGNAL switch_compare_1_3               : std_logic;
  SIGNAL Integer_Delay4_out1              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Switch3_out1                     : unsigned(31 DOWNTO 0);  -- uint32

BEGIN
  Port_unsigned <= unsigned(Port_rsvd);

  
  Compare_To_Constant_out1 <= '1' WHEN Port_unsigned = 1 ELSE
      '0';

  Compare_To_Constant_out1_1 <= Compare_To_Constant_out1 AND OUT_rsvd;

  
  switch_compare_1 <= '1' WHEN Compare_To_Constant_out1_1 >= '1' ELSE
      '0';

  data_out_unsigned <= unsigned(data_out);

  
  Switch_out1 <= Integer_Delay2_out1 WHEN switch_compare_1 = '0' ELSE
      data_out_unsigned;

  Integer_Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Delay2_out1 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Delay2_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Integer_Delay2_process;


  Port1 <= std_logic_vector(Integer_Delay2_out1);

  
  Compare_To_Constant1_out1 <= '1' WHEN Port_unsigned = 2 ELSE
      '0';

  Compare_To_Constant1_out1_1 <= Compare_To_Constant1_out1 AND OUT_rsvd;

  
  switch_compare_1_1 <= '1' WHEN Compare_To_Constant1_out1_1 >= '1' ELSE
      '0';

  
  Switch1_out1 <= Integer_Delay1_out1 WHEN switch_compare_1_1 = '0' ELSE
      data_out_unsigned;

  Integer_Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Delay1_out1 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Delay1_out1 <= Switch1_out1;
      END IF;
    END IF;
  END PROCESS Integer_Delay1_process;


  Port2 <= std_logic_vector(Integer_Delay1_out1);

  
  Compare_To_Constant2_out1 <= '1' WHEN Port_unsigned = 3 ELSE
      '0';

  Compare_To_Constant2_out1_1 <= Compare_To_Constant2_out1 AND OUT_rsvd;

  
  switch_compare_1_2 <= '1' WHEN Compare_To_Constant2_out1_1 >= '1' ELSE
      '0';

  
  Switch2_out1 <= Integer_Delay3_out1 WHEN switch_compare_1_2 = '0' ELSE
      data_out_unsigned;

  Integer_Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Delay3_out1 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Delay3_out1 <= Switch2_out1;
      END IF;
    END IF;
  END PROCESS Integer_Delay3_process;


  Port3 <= std_logic_vector(Integer_Delay3_out1);

  
  Compare_To_Constant3_out1 <= '1' WHEN Port_unsigned = 4 ELSE
      '0';

  Compare_To_Constant3_out1_1 <= Compare_To_Constant3_out1 AND OUT_rsvd;

  
  switch_compare_1_3 <= '1' WHEN Compare_To_Constant3_out1_1 >= '1' ELSE
      '0';

  
  Switch3_out1 <= Integer_Delay4_out1 WHEN switch_compare_1_3 = '0' ELSE
      data_out_unsigned;

  Integer_Delay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Delay4_out1 <= to_unsigned(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Delay4_out1 <= Switch3_out1;
      END IF;
    END IF;
  END PROCESS Integer_Delay4_process;


  Port4 <= std_logic_vector(Integer_Delay4_out1);

END rtl;

