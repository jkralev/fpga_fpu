-- -------------------------------------------------------------
-- 
-- File Name: D:\Dan\FPGA_FPU\ise_project_fpu\alpha12_bit_Program_Counter.vhd
-- Created: 2013-03-14 17:42:03
-- 
-- Generated by MATLAB 7.11 and Simulink HDL Coder 2.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: alpha12_bit_Program_Counter
-- Source Path: ivedsp/12 bit Program Counter
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY alpha12_bit_Program_Counter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        new_addr                          :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        JMP                               :   IN    std_logic;
        MAC                               :   IN    std_logic;
        MAC_Ready                         :   IN    std_logic;
        IN_OUT                            :   IN    std_logic;
        IN_OUT_Ready                      :   IN    std_logic;
        Instr_addr                        :   OUT   std_logic_vector(11 DOWNTO 0)  -- ufix12
        );
END alpha12_bit_Program_Counter;


ARCHITECTURE rtl OF alpha12_bit_Program_Counter IS

  -- Signals
  SIGNAL MAC_1                            : std_logic;
  SIGNAL Logical_Operator2_out1           : std_logic;
  SIGNAL IN_OUT_1                         : std_logic;
  SIGNAL Logical_Operator6_out1           : std_logic;
  SIGNAL Logical_Operator3_out1           : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL FixPt_Constant1_out1             : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL FixPt_Constant_out1              : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Switch1_out1                     : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL new_addr_unsigned                : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Switch_out1                      : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Program_Counter_out1             : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Add_out1                         : unsigned(11 DOWNTO 0);  -- ufix12

BEGIN
  MAC_1 <=  NOT MAC;

  Logical_Operator2_out1 <= MAC_1 OR MAC_Ready;

  IN_OUT_1 <=  NOT IN_OUT;

  Logical_Operator6_out1 <= IN_OUT_1 OR IN_OUT_Ready;

  Logical_Operator3_out1 <= Logical_Operator2_out1 AND Logical_Operator6_out1;

  
  switch_compare_1 <= '1' WHEN Logical_Operator3_out1 >= '1' ELSE
      '0';

  FixPt_Constant1_out1 <= to_unsigned(0, 12);

  
  switch_compare_1_1 <= '1' WHEN JMP >= '1' ELSE
      '0';

  FixPt_Constant_out1 <= to_unsigned(1, 12);

  
  Switch1_out1 <= FixPt_Constant1_out1 WHEN switch_compare_1 = '0' ELSE
      FixPt_Constant_out1;

  new_addr_unsigned <= unsigned(new_addr);

  Program_Counter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Program_Counter_out1 <= to_unsigned(0, 12);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Program_Counter_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Program_Counter_process;


  Add_out1 <= Program_Counter_out1 + Switch1_out1;

  
  Switch_out1 <= Add_out1 WHEN switch_compare_1_1 = '0' ELSE
      new_addr_unsigned;

  Instr_addr <= std_logic_vector(Switch_out1);

END rtl;

