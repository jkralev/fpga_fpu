-- -------------------------------------------------------------
-- 
-- File Name: D:\Dan\FPGA_FPU\ise_project_fpu\Instruction_Decoder.vhd
-- Created: 2013-03-14 17:42:03
-- 
-- Generated by MATLAB 7.11 and Simulink HDL Coder 2.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Instruction_Decoder
-- Source Path: ivedsp/Instruction Decoder
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Instruction_Decoder IS
  PORT( Instruction                       :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        LACC                              :   OUT   std_logic;
        SACC                              :   OUT   std_logic;
        MAC                               :   OUT   std_logic;
        JMP                               :   OUT   std_logic;
        instr_op                          :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
        SMS                               :   OUT   std_logic;
        RMI                               :   OUT   std_logic;
        IN_Port                           :   OUT   std_logic;
        OUT_Port                          :   OUT   std_logic
        );
END Instruction_Decoder;


ARCHITECTURE rtl OF Instruction_Decoder IS

  -- Signals
  SIGNAL Instruction_unsigned             : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL bitMask_for_Code_of_operation    : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Code_of_operation_out1           : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Shift_Arithmetic_out1            : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Type_Conversion3_out1       : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Compare_To_Constant1_out1        : std_logic;
  SIGNAL Compare_To_Constant2_out1        : std_logic;
  SIGNAL Compare_To_Constant3_out1        : std_logic;
  SIGNAL Compare_To_Constant5_out1        : std_logic;
  SIGNAL bitMask_for_Operand_address      : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Operand_address_out1             : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Type_Conversion9_out1       : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Compare_To_Constant6_out1        : std_logic;
  SIGNAL Compare_To_Constant7_out1        : std_logic;
  SIGNAL Compare_To_Constant8_out1        : std_logic;
  SIGNAL Compare_To_Constant9_out1        : std_logic;

BEGIN
  Instruction_unsigned <= unsigned(Instruction);

  bitMask_for_Code_of_operation <= to_unsigned(61440, 16);

  Code_of_operation_out1 <= Instruction_unsigned AND bitMask_for_Code_of_operation;

  Shift_Arithmetic_out1 <= Code_of_operation_out1 srl 12;

  Data_Type_Conversion3_out1 <= Shift_Arithmetic_out1(3 DOWNTO 0);

  
  Compare_To_Constant1_out1 <= '1' WHEN Data_Type_Conversion3_out1 = 1 ELSE
      '0';

  LACC <= Compare_To_Constant1_out1;

  
  Compare_To_Constant2_out1 <= '1' WHEN Data_Type_Conversion3_out1 = 2 ELSE
      '0';

  SACC <= Compare_To_Constant2_out1;

  
  Compare_To_Constant3_out1 <= '1' WHEN Data_Type_Conversion3_out1 = 3 ELSE
      '0';

  MAC <= Compare_To_Constant3_out1;

  
  Compare_To_Constant5_out1 <= '1' WHEN Data_Type_Conversion3_out1 = 5 ELSE
      '0';

  JMP <= Compare_To_Constant5_out1;

  bitMask_for_Operand_address <= to_unsigned(4095, 16);

  Operand_address_out1 <= Instruction_unsigned AND bitMask_for_Operand_address;

  Data_Type_Conversion9_out1 <= Operand_address_out1(11 DOWNTO 0);

  instr_op <= std_logic_vector(Data_Type_Conversion9_out1);

  
  Compare_To_Constant6_out1 <= '1' WHEN Data_Type_Conversion3_out1 = 6 ELSE
      '0';

  SMS <= Compare_To_Constant6_out1;

  
  Compare_To_Constant7_out1 <= '1' WHEN Data_Type_Conversion3_out1 = 7 ELSE
      '0';

  RMI <= Compare_To_Constant7_out1;

  
  Compare_To_Constant8_out1 <= '1' WHEN Data_Type_Conversion3_out1 = 8 ELSE
      '0';

  IN_Port <= Compare_To_Constant8_out1;

  
  Compare_To_Constant9_out1 <= '1' WHEN Data_Type_Conversion3_out1 = 9 ELSE
      '0';

  OUT_Port <= Compare_To_Constant9_out1;

END rtl;

