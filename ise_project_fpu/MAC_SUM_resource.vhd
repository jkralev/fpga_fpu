-- -------------------------------------------------------------
-- 
-- File Name: D:\Dan\FPGA_Test\ise_project_1\MAC_SUM_resource.vhd
-- Created: 2012-11-30 12:16:24
-- 
-- Generated by MATLAB 7.11 and Simulink HDL Coder 2.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: MAC_SUM_resource
-- Source Path: ivedsp/MAC,SUM resource
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY MAC_SUM_resource IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        op1                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En16
        op2                               :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En16
        reset_1                           :   IN    std_logic;
        SUM                               :   IN    std_logic;
        MAC                               :   IN    std_logic;
        result                            :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En16
        );
END MAC_SUM_resource;


ARCHITECTURE rtl OF MAC_SUM_resource IS

  -- Signals
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL op1_signed                       : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL switch_compare_1_1               : std_logic;
  SIGNAL switch_compare_1_2               : std_logic;
  SIGNAL Constant_out1                    : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL op2_signed                       : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Product_mul_temp                 : signed(63 DOWNTO 0);  -- sfix64_En32
  SIGNAL Product_out1                     : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Switch4_out1                     : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL switch_compare_1_3               : std_logic;
  SIGNAL Switch2_out1                     : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Switch_out1                      : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Internal_accumulator_out1        : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Switch1_out1                     : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Add_out1                         : signed(31 DOWNTO 0);  -- sfix32_En16

BEGIN
  
  switch_compare_1 <= '1' WHEN SUM >= '1' ELSE
      '0';

  op1_signed <= signed(op1);

  
  switch_compare_1_1 <= '1' WHEN SUM >= '1' ELSE
      '0';

  
  switch_compare_1_2 <= '1' WHEN MAC >= '1' ELSE
      '0';

  Constant_out1 <= to_signed(0, 32);

  op2_signed <= signed(op2);

  Product_mul_temp <= op1_signed * op2_signed;
  Product_out1 <= Product_mul_temp(47 DOWNTO 16);

  
  Switch4_out1 <= Constant_out1 WHEN switch_compare_1_2 = '0' ELSE
      Product_out1;

  
  switch_compare_1_3 <= '1' WHEN reset_1 >= '1' ELSE
      '0';

  
  Switch2_out1 <= Switch4_out1 WHEN switch_compare_1_1 = '0' ELSE
      op2_signed;

  Internal_accumulator_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Internal_accumulator_out1 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Internal_accumulator_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Internal_accumulator_process;


  
  Switch1_out1 <= Internal_accumulator_out1 WHEN switch_compare_1 = '0' ELSE
      op1_signed;

  Add_out1 <= Switch1_out1 + Switch2_out1;

  
  Switch_out1 <= Add_out1 WHEN switch_compare_1_3 = '0' ELSE
      Constant_out1;

  result <= std_logic_vector(Switch_out1);

END rtl;

