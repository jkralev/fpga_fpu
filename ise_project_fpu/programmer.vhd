-- -------------------------------------------------------------
-- 
-- File Name: D:\Dan\FPGA_FPU\ise_project_fpu\programmer.vhd
-- Created: 2013-02-09 16:56:18
-- 
-- Generated by MATLAB 7.11 and Simulink HDL Coder 2.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: programmer
-- Source Path: programmer
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.programmer_pkg.ALL;

ENTITY programmer IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        BRAM_out                          :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        buf_in_1                          :   IN    vector_of_std_logic_vector8(0 TO 1);  -- uint8 [2]
        read_ev                           :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        BRAM_addr                         :   OUT   std_logic_vector(10 DOWNTO 0);  -- ufix11
        ramd_w                            :   OUT   std_logic;
        ramd_d                            :   OUT   vector_of_std_logic_vector8(0 TO 3);  -- uint8 [4]
        ramd_a                            :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
        write_ram                         :   OUT   std_logic;
        data_ram                          :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        addr_ram                          :   OUT   std_logic_vector(13 DOWNTO 0);  -- ufix14
        buf_out_1                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- uint16
        );
END programmer;


ARCHITECTURE rtl OF programmer IS

  -- Component Declarations
  COMPONENT Programmer_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          BRAM_out                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          req                             :   IN    vector_of_std_logic_vector8(0 TO 2);  -- uint8 [3]
          read_ev                         :   IN    std_logic;
          BRAM_addr                       :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          ramd_w                          :   OUT   std_logic;
          ramd_d                          :   OUT   vector_of_std_logic_vector8(0 TO 3);  -- uint8 [4]
          ramd_a                          :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
          ramp_w                          :   OUT   std_logic;
          ramp_d                          :   OUT   vector_of_std_logic_vector8(0 TO 3);  -- uint8 [4]
          ramp_a                          :   OUT   std_logic_vector(11 DOWNTO 0);  -- ufix12
          write_ram                       :   OUT   std_logic;
          data_ram                        :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          addr_ram                        :   OUT   std_logic_vector(13 DOWNTO 0)  -- ufix14
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : Programmer_block
    USE ENTITY work.Programmer_block(rtl);

  -- Signals
  SIGNAL FixPt_Constant2_out1             : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Mux_out1                         : vector_of_unsigned8(0 TO 2);  -- uint8 [3]
  SIGNAL Mux_out1_1                       : vector_of_std_logic_vector8(0 TO 2);  -- ufix8 [3]
  SIGNAL Programmer_out1                  : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL Programmer_out2                  : std_logic;
  SIGNAL Programmer_out3                  : vector_of_std_logic_vector8(0 TO 3);  -- ufix8 [4]
  SIGNAL Programmer_out4                  : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL Programmer_out5                  : std_logic;
  SIGNAL Programmer_out6                  : vector_of_std_logic_vector8(0 TO 3);  -- ufix8 [4]
  SIGNAL Programmer_out7                  : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL Programmer_out8                  : std_logic;
  SIGNAL Programmer_out9                  : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Programmer_out10                 : std_logic_vector(13 DOWNTO 0);  -- ufix14
  SIGNAL Programmer_out1_unsigned         : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Data_Type_Conversion2_out1       : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL FixPt_Constant1_out1             : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Add_out1                         : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Programmer_out4_unsigned         : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL FixPt_Constant3_out1             : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Add1_out1                        : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Programmer_out6_unsigned         : vector_of_unsigned8(0 TO 3);  -- uint8 [4]
  SIGNAL Programmer_out7_unsigned         : unsigned(11 DOWNTO 0);  -- ufix12

BEGIN
  u_Programmer : Programmer_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              BRAM_out => BRAM_out,  -- uint8
              req => Mux_out1_1,  -- uint8 [3]
              read_ev => read_ev,
              BRAM_addr => Programmer_out1,  -- ufix2
              ramd_w => Programmer_out2,
              ramd_d => Programmer_out3,  -- uint8 [4]
              ramd_a => Programmer_out4,  -- ufix12
              ramp_w => Programmer_out5,
              ramp_d => Programmer_out6,  -- uint8 [4]
              ramp_a => Programmer_out7,  -- ufix12
              write_ram => Programmer_out8,
              data_ram => Programmer_out9,  -- uint8
              addr_ram => Programmer_out10  -- ufix14
              );

  FixPt_Constant2_out1 <= to_unsigned(200, 8);

  Mux_out1(0) <= FixPt_Constant2_out1;
  Mux_out1(1) <= unsigned(buf_in_1(0));
  Mux_out1(2) <= unsigned(buf_in_1(1));

  outputgen1: FOR k IN 0 TO 2 GENERATE
    Mux_out1_1(k) <= std_logic_vector(Mux_out1(k));
  END GENERATE;

  Programmer_out1_unsigned <= unsigned(Programmer_out1);

  Data_Type_Conversion2_out1 <= resize(Programmer_out1_unsigned, 5);

  FixPt_Constant1_out1 <= to_unsigned(43, 11);

  Add_out1 <= resize(Data_Type_Conversion2_out1, 11) + FixPt_Constant1_out1;

  BRAM_addr <= std_logic_vector(Add_out1);

  ramd_w <= Programmer_out2;

  ramd_d <= Programmer_out3;

  ramd_a <= Programmer_out4;

  write_ram <= Programmer_out8;

  data_ram <= Programmer_out9;

  addr_ram <= Programmer_out10;

  Programmer_out4_unsigned <= unsigned(Programmer_out4);

  FixPt_Constant3_out1 <= to_unsigned(1, 12);

  Add1_out1 <= resize(Programmer_out4_unsigned, 16) + resize(FixPt_Constant3_out1, 16);

  buf_out_1 <= std_logic_vector(Add1_out1);

  ce_out <= clk_enable;


  outputgen: FOR k IN 0 TO 3 GENERATE
    Programmer_out6_unsigned(k) <= unsigned(Programmer_out6(k));
  END GENERATE;


  Programmer_out7_unsigned <= unsigned(Programmer_out7);


END rtl;

