-- -------------------------------------------------------------
-- 
-- File Name: D:\Dan\FPGA_Test\ise_project_1\alpha16_bit_Program_Counter.vhd
-- Created: 2012-11-30 12:16:24
-- 
-- Generated by MATLAB 7.11 and Simulink HDL Coder 2.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: alpha16_bit_Program_Counter
-- Source Path: ivedsp/16 bit Program Counter
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY alpha16_bit_Program_Counter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        new_addr                          :   IN    std_logic_vector(11 DOWNTO 0);  -- ufix12
        JMP                               :   IN    std_logic;
        Instr_addr                        :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END alpha16_bit_Program_Counter;


ARCHITECTURE rtl OF alpha16_bit_Program_Counter IS

  -- Signals
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL FixPt_Constant_out1              : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL new_addr_unsigned                : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Data_Type_Conversion9_out1       : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Switch_out1                      : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Program_Counter_out1             : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Add_add_temp                     : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Add_out1                         : unsigned(7 DOWNTO 0);  -- uint8

BEGIN
  
  switch_compare_1 <= '1' WHEN JMP >= '1' ELSE
      '0';

  FixPt_Constant_out1 <= to_unsigned(1, 8);

  new_addr_unsigned <= unsigned(new_addr);

  Data_Type_Conversion9_out1 <= new_addr_unsigned(7 DOWNTO 0);

  Program_Counter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Program_Counter_out1 <= to_unsigned(0, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Program_Counter_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Program_Counter_process;


  Add_add_temp <= resize(Program_Counter_out1, 9) + resize(FixPt_Constant_out1, 9);
  
  Add_out1 <= "11111111" WHEN Add_add_temp(8) /= '0' ELSE
      Add_add_temp(7 DOWNTO 0);

  
  Switch_out1 <= Add_out1 WHEN switch_compare_1 = '0' ELSE
      Data_Type_Conversion9_out1;

  Instr_addr <= std_logic_vector(Switch_out1);

END rtl;

