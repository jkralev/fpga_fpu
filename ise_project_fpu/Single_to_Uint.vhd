-- -------------------------------------------------------------
-- 
-- File Name: D:\Dan\FPGA_FPU\ise_project_fpu\Single_to_Uint.vhd
-- Created: 2013-04-29 19:25:11
-- 
-- Generated by MATLAB 7.11 and Simulink HDL Coder 2.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Single_to_Uint
-- Source Path: analog_ext/Single to Uint
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Single_to_Uint IS
  PORT( sig                               :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        exp                               :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        frac1                             :   IN    std_logic_vector(23 DOWNTO 0);  -- ufix24
        y                                 :   OUT   std_logic_vector(11 DOWNTO 0)  -- ufix12
        );
END Single_to_Uint;


ARCHITECTURE rtl OF Single_to_Uint IS

  -- Signals
  SIGNAL sig_unsigned                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL exp_unsigned                     : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL frac1_unsigned                   : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL y_tmp                            : unsigned(11 DOWNTO 0);  -- ufix12

BEGIN
  sig_unsigned <= unsigned(sig);

  exp_unsigned <= unsigned(exp);

  frac1_unsigned <= unsigned(frac1);

  Single_to_Uint_1_output : PROCESS (sig_unsigned, exp_unsigned, frac1_unsigned)
    VARIABLE z : signed(15 DOWNTO 0);
    VARIABLE buf : unsigned(31 DOWNTO 0);
    VARIABLE c : unsigned(31 DOWNTO 0);
    VARIABLE absk1 : unsigned(7 DOWNTO 0);
    VARIABLE absk1_0 : unsigned(7 DOWNTO 0);
    VARIABLE sub_cast : signed(31 DOWNTO 0);
    VARIABLE sub_temp : signed(31 DOWNTO 0);
    VARIABLE z_0 : signed(32 DOWNTO 0);
    VARIABLE cast : signed(31 DOWNTO 0);
  BEGIN
    y_tmp <= to_unsigned(0, 12);
    IF (sig_unsigned = 0) AND (exp_unsigned >= 127) THEN 
      buf := resize(frac1_unsigned, 32);
      sub_cast := signed(resize(exp_unsigned, 32));
      sub_temp := sub_cast - 150;
      z := sub_temp(15 DOWNTO 0);
      c := to_unsigned(0, 32);
      IF z < 0 THEN 
        z_0 :=  - (resize(z, 33));
        cast := z_0(31 DOWNTO 0);
        absk1_0 := unsigned(cast(7 DOWNTO 0));
        c := buf srl to_integer(absk1_0);
      ELSE 
        absk1 := unsigned(z(7 DOWNTO 0));
        IF absk1 < 32 THEN 
          c := buf sll to_integer(absk1);
        END IF;
      END IF;
      IF c(31 DOWNTO 12) /= "00000000000000000000" THEN 
        y_tmp <= "111111111111";
      ELSE 
        y_tmp <= c(11 DOWNTO 0);
      END IF;
      ---23+(exp-127)
    END IF;
  END PROCESS Single_to_Uint_1_output;


  y <= std_logic_vector(y_tmp);

END rtl;

